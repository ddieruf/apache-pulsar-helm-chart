{{- $component := "meta-data-store" -}}
{{- $name := (printf "%s-statefulset" (include "meta-data-store.name" $)) -}}
{{- $secureOnlyPorts := (eq (include "common.tls.require-secure-inter" .) "true") -}}

apiVersion: {{ include "common.capabilities.statefulset.apiVersion" . }}
kind: StatefulSet
metadata:
  name: {{ $name | quote }}
  namespace: {{ (include "common.names.namespace" .) | quote }}
  labels: {{ include "common.labels.standard" (dict "name" (include "meta-data-store.name" $) "context" $ ) | nindent 4 }}
    app.kubernetes.io/component: {{ $component | quote }}
    {{ include "common.tplvalues.render" ( dict "value" .Values.global.commonLabels "context" $ ) | nindent 4 }}
  annotations:
    {{ include "common.tplvalues.render" ( dict "value" .Values.global.commonAnnotations "context" $ ) | nindent 4 }}
spec:
  podManagementPolicy: {{ .Values.podManagementPolicy | quote }}
  replicas: {{ int .Values.globalData.replicas }}
  selector:
    matchLabels: {{ (include "common.labels.matchLabels" (dict "name" (include "meta-data-store.name" $) "context" $ )) | nindent 6 }}
      app.kubernetes.io/component: {{ $component | quote }}
  serviceName: {{ printf "%s-headless" (include "meta-data-store.name" .) }}
  updateStrategy: {{ include "common.tplvalues.render" (dict "value" .Values.updateStrategy "context" $ ) | nindent 4 }}
  template:
    metadata:
      labels: {{ include "common.labels.standard" (dict "name" (include "meta-data-store.name" .) "context" $ ) | nindent 8 }}
        app.kubernetes.io/component: {{ $component | quote }}
        {{- if .Values.podLabels }}
        {{ include "common.tplvalues.render" (dict "value" .Values.podLabels "context" $) | nindent 8 }}
        {{- end }}
      annotations:
        checksum/configuration: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- if .Values.podAnnotations }}
        {{ include "common.tplvalues.render" (dict "value" .Values.podAnnotations "context" $) | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.hostAliases }}
      hostAliases: {{ include "common.tplvalues.render" (dict "value" .Values.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      hostNetwork: {{ .Values.hostNetwork }}
      hostIPC: {{ .Values.hostIPC }}
      {{- if .Values.schedulerName }}
      schedulerName: {{ .Values.schedulerName | quote }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity: {{ include "common.tplvalues.render" (dict "value" .Values.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{ include "common.affinities.pods" (dict "type" .Values.podAffinityPreset "component" $component "name" $name "extraMatchLabels" (dict) "context" $) | nindent 10}}
        podAntiAffinity: {{ include "common.affinities.pods" (dict "type" .Values.podAntiAffinityPreset "component" $component "name" $name "extraMatchLabels" (dict) "context" $) | nindent 10 }}
        nodeAffinity: {{ include "common.affinities.nodes" (dict "type" .Values.nodeAffinityPreset.type "key" .Values.nodeAffinityPreset.key "values" .Values.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector: {{ include "common.tplvalues.render" (dict "value" .Values.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations: {{ include "common.tplvalues.render" (dict "value" .Values.tolerations "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.topologySpreadConstraints }}
      topologySpreadConstraints: {{ include "common.tplvalues.render" (dict "value" .Values.topologySpreadConstraints "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      {{- if .Values.podSecurityContext.enabled }}
      securityContext: {{ omit .Values.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "meta-data-store.serviceAccountName" . }}
      {{- if .Values.initContainers }}
      initContainers:
        {{ include "common.tplvalues.render" ( dict "value" .Values.initContainers "context" $ ) | nindent 8 }}
      {{- end }}
      containers:
        - name: meta-data-store
          image: {{ include "common.images.image" (dict "imageRoot" .Values.image "global" .Values.global) }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          {{- if .Values.containerSecurityContext.enabled }}
          securityContext: {{ omit .Values.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.containerCommand }}
          command:
            {{ include "common.tplvalues.render" (dict "value" .Values.containerCommand "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.containerArgs }}
          args:
            {{ include "common.tplvalues.render" (dict "value" .Values.containerArgs "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.extraEnvVars }}
          env:
            {{ include "common.tplvalues.render" ( dict "value" .Values.extraEnvVars "context" $) | nindent 12 }}
          {{- end }}
          {{- if or .Values.extraEnvVarsCM .Values.extraEnvVarsSecret }}
          envFrom:
            {{- if .Values.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.extraEnvVarsCM "context" $) }}
            {{- end }}
            {{- if .Values.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.extraEnvVarsSecret "context" $) }}
            {{- end }}
          {{- end }}
          ports:
            {{- if and (not $secureOnlyPorts) .Values.containerPorts.client }}
            - name: client
              containerPort: {{ .Values.containerPorts.client }}
            {{- end }}
            {{- if and $secureOnlyPorts .Values.containerPorts.clientTls }}
            - name: clientTls
              containerPort: {{ .Values.containerPorts.clientTls }}
            {{- end }}
            {{- if .Values.containerPorts.server }}
            - name: server
              containerPort: {{ .Values.containerPorts.server }}
            {{- end }}
            {{- if .Values.containerPorts.leaderElection }}
            - name: leader-election
              containerPort: {{ .Values.containerPorts.leaderElection }}
            {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe: {{ include "common.tplvalues.render" (dict "value" (omit .Values.livenessProbe "enabled") "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe: {{ include "common.tplvalues.render" (dict "value" (omit .Values.readinessProbe "enabled") "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.startupProbe.enabled }}
          startupProbe: {{ include "common.tplvalues.render" (dict "value" (omit .Values.startupProbe "enabled") "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.lifecycleHooks }}
          lifecycle: {{ include "common.tplvalues.render" (dict "value" .Values.lifecycleHooks "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.resources }}
          resources: {{ toYaml .Values.resources | nindent 12 }}
          {{- end }}
        {{- if .Values.sidecars }}
        {{ include "common.tplvalues.render" (dict "value" .Values.sidecars "context" $) | nindent 8 }}
        {{- end }}
          volumeMounts:
            - name: data
              mountPath: {{ .Values.persistence.mountPath }}
            - name: logs
              mountPath: {{ .Values.logPersistence.mountPath }}
            - name: meta-data-store-config
              mountPath: {{ .Values.persistence.mountPath }}/conf
            - name: pulsar-environment
              mountPath: {{ .Values.persistence.mountPath }}
            {{- if .Values.extraVolumeMounts }}
            {{ include "common.tplvalues.render" (dict "value" .Values.extraVolumeMounts "context" $) | nindent 10 }}
            {{- end }}
      volumes:
{{- if .Values.persistence.existingClaim }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ printf "%s" (tpl .Values.persistence.existingClaim .) }}
{{- end }}
{{- if .Values.logPersistence.existingClaim }}
        - name: logs
          persistentVolumeClaim:
            claimName: {{ printf "%s" (tpl .Values.logPersistence.existingClaim .) }}
{{- end }}
        - name: meta-data-store-config
          configMap:
            name: {{ printf "%s-configuration" (include "meta-data-store.name" .) }}
            items:
            - key: zookeeper.conf
              path: zookeeper.conf
        - name: pulsar-environment
          configMap:
            name: {{ printf "%s-pulsar_env" (include "meta-data-store.name" .) }}
            items:
            - key: pulsar_env.sh
              path: pulsar_env.sh
        {{- if .Values.extraVolumes }}
        {{ include "common.tplvalues.render" (dict "value" .Values.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
{{- if or (not .Values.persistence.existingClaim) (not .Values.logPersistence.existingClaim) }}
  volumeClaimTemplates:
{{- end }}
{{- if not .Values.persistence.existingClaim }}
      - metadata:
          name: data
          {{- if .Values.persistence.annotations }}
          annotations: {{ include "common.tplvalues.render" (dict "value" .Values.persistence.annotations "context" $) | nindent 10 }}
          {{- end }}
        spec:
          accessModes:
          {{ range .Values.persistence.accessModes }}
            - {{ . | quote }}
          {{- end }}
          resources:
            requests:
              storage: {{ .Values.persistence.size | quote }}
          {{ include "meta-data-store.persistence.storageClass" . | nindent 10 }}
          {{- if .Values.persistence.selector }}
          selector: {{ include "common.tplvalues.render" (dict "value" .Values.persistence.selector "context" $) | nindent 10 }}
          {{- end }}
{{- end }}
{{- if not .Values.logPersistence.existingClaim }}
      - metadata:
          name: logs
          {{- if .Values.logPersistence.annotations }}
          annotations: {{ include "common.tplvalues.render" (dict "value" .Values.logPersistence.annotations "context" $) | nindent 10 }}
          {{- end }}
        spec:
          accessModes:
          {{ range .Values.logPersistence.accessModes }}
            - {{ . | quote }}
          {{- end }}
          resources:
            requests:
              storage: {{ .Values.logPersistence.size | quote }}
          {{ include "meta-data-store.persistence.storageClass" . | nindent 10 }}
          {{- if .Values.logPersistence.selector }}
          selector: {{ include "common.tplvalues.render" (dict "value" .Values.logPersistence.selector "context" $) | nindent 10 }}
          {{- end }}
{{- end }}
