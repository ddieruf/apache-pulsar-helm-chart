{{- if .Values.ingress.enabled }}

{{/*{{- if eq .Values.global.proxy.enabled true -}}*/}}
{{/*  {{- fail "With the proxy enabled, the broker becomes an internal component and can't have ingress enabled. Either disable the proxy (to bring the broker to the edge) or disable the broker ingress."*/}}
{{/*   -}}*/}}
{{/*{{- end -}}*/}}

{{- if and (eq (include "broker.tls.require-secure" $) "true") (eq .Values.ingress.tls false) -}}
  {{- fail "The broker's ingress.tls should be 'true' when secure communications are enabled" -}}
{{- end -}}

{{- $component := "broker" -}}
{{- $name := (printf "%s-ingress" (include "broker.name" $)) -}}

apiVersion: {{ include "common.capabilities.ingress.apiVersion" . }}
kind: Ingress
metadata:
  name: {{ $name | quote }}
  namespace: {{ (include "common.names.namespace" .) | quote }}
  labels: {{ include "common.labels.standard" (dict "name" (include "broker.name" .) "context" $ ) | nindent 4 }}
    app.kubernetes.io/component: {{ $component | quote }}
    {{ include "common.tplvalues.render" ( dict "value" .Values.global.commonLabels "context" $ ) | nindent 4 }}
  annotations:
    {{ include "common.tplvalues.render" ( dict "value" .Values.global.commonAnnotations "context" $ ) | nindent 4 }}
    {{- if .Values.ingress.annotations }}
    {{ include "common.tplvalues.render" ( dict "value" .Values.ingress.annotations "context" $ ) | nindent 4 }}
    {{- end }}
spec:
  {{- if and .Values.ingress.ingressClassName (eq "true" (include "common.ingress.supportsIngressClassname" .)) }}
  ingressClassName: {{ .Values.ingress.ingressClassName | quote }}
  {{- end }}
  rules:
    {{- if .Values.ingress.hostname }}
    - host: {{ .Values.ingress.hostname }}
      http:
        paths:
          {{- if .Values.ingress.extraPaths }}
          {{ toYaml .Values.ingress.extraPaths | nindent 10 }}
          {{- end }}
          - path: {{ .Values.ingress.path }}
            {{- if eq "true" (include "common.ingress.supportsPathType" .) }}
            pathType: {{ .Values.ingress.pathType }}
            {{- end }}
            backend: {{ include "common.ingress.backend" (dict "serviceName" (include "broker.fullname" .) "servicePort" (ternary "https" "http" .Values.ingress.tls) "context" $)  | nindent 14 }}
    {{- end }}
    {{ range .Values.ingress.extraHosts }}
    - host: {{ .name | quote }}
      http:
        paths:
          - path: {{ default "/" .path }}
            {{- if eq "true" (include "common.ingress.supportsPathType" $) }}
            pathType: {{ default "ImplementationSpecific" .pathType }}
            {{- end }}
            backend: {{ include "common.ingress.backend" (dict "serviceName" (include "broker.fullname" $) "servicePort" (ternary "https" "http" $.Values.ingress.tls) "context" $) | nindent 14 }}
    {{- end }}
    {{- if .Values.ingress.extraRules }}
    {{ include "common.tplvalues.render" (dict "value" .Values.ingress.extraRules "context" $) | nindent 4 }}
    {{- end }}
  {{- if or .Values.ingress.tls .Values.ingress.extraTls }}
  tls:
    {{- if .Values.ingress.tls }}
    - hosts:
        - {{ .Values.ingress.hostname }}
      secretName: {{ printf "%s-tls" .Values.ingress.hostname }}
    {{- end }}
    {{- if .Values.ingress.extraTls }}
    {{ include "common.tplvalues.render" ( dict "value" .Values.ingress.extraTls "context" $ ) | nindent 4 }}
    {{- end }}
  {{- end }}
{{- end }}