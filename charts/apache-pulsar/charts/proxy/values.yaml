globalData:
  ## @param globalData.name [string] String to name component
  ##
  name: "proxy"

  ## @param globalData.fullnameOverride [string,nullable] String to fully override component naming
  ##
  fullnameOverride:

  ## @param globalData.dnsName [string] Load balancer DNS name
  ##
  dnsName:

  ## @param globalData.replicas The number of proxies to deploy
  ##
  replicas: 3

## @section Image parameters
## @descriptionStart
## @descriptionEnd
##
image:

  ## @param image.registry [string,nullable] Component image registry
  ##
  registry: ""

  ## @param image.repository [string,nullable] Component image repository
  ##
  repository: "datastax/lunastreaming"

  ## @param image.tag [string,nullable] Component image tag (immutable tags are recommended)
  ##
  tag: "2.10_2.3"

  ## @param image.pullPolicy Component image pull policy
  ## Specify a imagePullPolicy
  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  ## ref: https://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  pullPolicy: IfNotPresent

  ## @param image.pullSecrets [array,nullable] Specify docker-registry secret names as an array
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ## e.g:
  ## pullSecrets:
  ##   - myRegistryKeySecretName
  ##
  pullSecrets: []

## @section Certificate Resources
## @descriptionStart
## Configure the component's certificate
## @descriptionEnd
##
certificateResources:

  ## @param certificateResources.tlsSecretName [string,nullable]
  ##
  tlsSecretName:

  ## @param certificateResources.jksPasswordSecretName [string,nullable]
  ##
  jksPasswordSecretName:

  ## @extra certificateResources.certificateRequest Refer to the [CertificateSpec](https://cert-manager.io/docs/reference/api-docs/#cert-manager.io/v1.CertificateSpec) for more info about these values.
  ##
  certificateRequest:

    ## @param certificateResources.certificateRequest.renewBefore How long before the currently issued certificate’s expiry cert-manager should renew the certificate. Default is 2/3 of the duration.
    ##
    renewBefore:

    ## @param certificateResources.certificateRequest.duration The requested ‘duration’ (i.e. lifetime) of the Certificate. Default is 90 days
    ##
    duration:

    ##
    ##
    subject:

      ## @param certificateResources.certificateRequest.subject.organizations [array,nullable] Organizations to be used on the Certificate
      ##
      organizations: []

    ## @param certificateResources.certificateRequest.privateKey [object,nullable] Options to control private keys used for the Certificate
    ##
    privateKey: {}

    ## @param certificateResources.certificateRequest.issuerRef [object,nullable] IssuerRef is a reference to the issuer for this certificate
    ##
    issuerRef: {}

## @section Pulsar Environment Configuration
## @descriptionStart

## @descriptionEnd
##
pulsarEnv:
  ## @param pulsarEnv.confPath The full path where configuration files are held
  ##
  confPath: /pulsar/conf
  ## @param pulsarEnv.gc A collection of JVM settings garbage collection settings
  ##
  gc:
    - "-XX:+UseG1GC"
    - "-XX:MaxGCPauseMillis=10"
    - "-XX:+ParallelRefProcEnabled"
    - "-XX:+UnlockExperimentalVMOptions"
    - "-XX:+DoEscapeAnalysis"
    - "-XX:ParallelGCThreads=32"
    - "-XX:ConcGCThreads=32"
    - "-XX:G1NewSizePercent=50"
    - "-XX:+DisableExplicitGC"
  ## @param pulsarEnv.mem A collection of JVM memory settings
  ##
  mem:
    - "-Xms2g"
    - "-Xmx2g"
    - "-XX:MaxDirectMemorySize=4g"
  ##
  ##
  loggingLevels:
    ## @param pulsarEnv.loggingLevels.root Applies the pulsar.log.root.level JVM option
    ##
    root: "error"
    ## @param pulsarEnv.loggingLevels.pulsar Applies the PULSAR_LOG_LEVEL env var
    ##
    pulsar: "error"
  ## @param pulsarEnv.extraOpts A collection of extra options to be passed to the jvm. Format each as the entire key/value
  ##
  extraOpts:
    - "-Dzookeeper.tcpKeepAlive=true"
    - "-Dzookeeper.clientTcpKeepAlive=true"
    - "-Dpulsar.allocator.exit_on_oom=true"
    - "-Dio.netty.recycler.maxCapacity.default=1000"
    - "-Dio.netty.recycler.linkCapacity=1024"
    - "-Dlog4j2.formatMsgNoLookups=true"
  ## @param pulsarEnv.extraClasspath A collection of extra paths for the pulsar classpath. Include just the folder or file path, no delimiter.
  ##
  extraClasspath: []
  ## @param pulsarEnv.stopTimeout Time to wait for an instance to stop before getting forceful
  ##
  stopTimeout: 5

## @section Pulsar Proxy configuration
## @descriptionStart
## Configure proxy settings. Refer to the [project's documentation](https://pulsar.apache.org/docs/reference-configuration#proxy) for a full spec.
##
## > Note, the values not documented here are set by the parent chart
## @descriptionEnd
##

config:
  ## @param config.amqpAuthenticationMechanisms Comma-separated authentication mechanism name list for AMQP. For example: PLAIN, EXTERNAL
  ##
  amqpAuthenticationMechanisms: PLAIN
  ## @param config.amqpBatchingEnabled Whether batching messages is enabled in AMQP.
  ##
  amqpBatchingEnabled: TRUE
  ## @param config.amqpBrokerClientAuthenticationParameters If set, the RabbitMQ service will use these parameters to authenticate on Pulsar’s brokers. If not set, the brokerClientAuthenticationParameters setting will be used. This setting allows different credentials for the Pulsar proxy and the RabbitMQ service.
  ##
  amqpBrokerClientAuthenticationParameters:
  ## @param config.amqpConnectionCloseTimeout Timeout in ms after which the AMQP connection closes even if a ConnectionCloseOk frame is not received.
  ##
  amqpConnectionCloseTimeout: 2000
  ## @param config.amqpDebugBinaryDataLength AMQP length of binary data sent to debug log.
  ##
  amqpDebugBinaryDataLength: 80
  ## @param config.amqpHeartbeatDelay The default period with which Broker and client will exchange heartbeat messages in seconds when using AMQP. Clients may negotiate a different heartbeat frequency or disable it altogether.
  ##
  amqpHeartbeatDelay: 0
  ## @param config.amqpHeartbeatTimeoutFactor Factor to determine the maximum length of time that may elapse between heartbeats being received from the peer before an AMQP0.9 connection is deemed to have been broken.
  ##
  amqpHeartbeatTimeoutFactor: 2
  ## @param config.amqpListeners Specifies multiple advertised listeners for the proxy. Format the value as amqp[s]://<host>:<port> with multiple listeners separated with commas.
  ##
  amqpListeners:
  ## @param config.amqpMaxMessageSize AMQP maximum message size.
  ##
  amqpMaxMessageSize: 104857600
  ## @param config.amqpNetworkBufferSize AMQP network buffer size.
  ##
  amqpNetworkBufferSize: 2097152
  ## @param config.amqpSessionCountLimit The maximum number of sessions that can exist concurrently on an AMQP connection.
  ##
  amqpSessionCountLimit: 256
  ## @param config.anonymousUserRole When this parameter is not empty, unauthenticated users perform as anonymousUserRole.
  ##
  anonymousUserRole:
  ## @param config.authenticateMetricsEndpoint Whether the '/metrics' endpoint requires authentication. Defaults to true. 'authenticationEnabled' must also be set for this to take effect.
  ##
  authenticateMetricsEndpoint:
  ## @skip config.authenticationEnabled
  ## Whether authentication is enabled for the Pulsar proxy
  ##
  authenticationEnabled:
  ## @skip config.authenticationProviders
  ## Authentication provider name list (a comma-separated list of class names)
  ##
  authenticationProviders:
  ## @skip config.authorizationEnabled
  ## Whether authorization is enforced by the Pulsar proxy
  ##
  authorizationEnabled:
  ## @skip config.authorizationProvider
  ## Authorization provider as a fully qualified class name
  ##
  authorizationProvider:
  ## @skip config.bindAddress
  ## Hostname or IP address the service binds on, default is 0.0.0.0.
  ##
  bindAddress: "0.0.0.0"
  ## @param config.brokerClientAuthenticationParameters The authentication parameters used by the Pulsar proxy to authenticate with Pulsar brokers
  ##
  brokerClientAuthenticationParameters:
  ## @param config.brokerClientAuthenticationPlugin The authentication plugin used by the Pulsar proxy to authenticate with Pulsar brokers
  ##
  brokerClientAuthenticationPlugin:
  ## @skip config.brokerClientTlsEnabledWithKeyStore
  ## Whether the proxy uses KeyStore type to authenticate with Pulsar brokers.
  ##
  brokerClientTlsEnabledWithKeyStore:
  ## @skip config.brokerClientTlsTrustStore
  ## TLS TrustStore path for proxy used by the Pulsar proxy to authenticate with Pulsar brokers.
  ##
  brokerClientTlsTrustStore:
  ## @skip config.brokerClientTlsTrustStorePassword
  ## TLS TrustStore password for proxy used by the Pulsar proxy to authenticate with Pulsar brokers.
  ##
  brokerClientTlsTrustStorePassword:
  ## @skip config.brokerClientTlsTrustStoreType
  ## TLS TrustStore type configuration for proxy used by the proxy to authenticate with Pulsar brokers. For example: JKS, PKCS12
  ##
  brokerClientTlsTrustStoreType:
  ## @skip config.brokerClientTrustCertsFilePath
  ## The path to trusted certificates used by the Pulsar proxy to authenticate with Pulsar brokers
  ##
  brokerClientTrustCertsFilePath:
  ## @skip config.brokerServiceURL
  ## The service URL pointing to the broker cluster. Must begin with pulsar://.
  ##
  brokerServiceURL:
  ## @skip config.brokerServiceURLTLS
  ## The TLS service URL pointing to the broker cluster. Must begin with pulsar+ssl://.
  ##
  brokerServiceURLTLS:
  ## @skip config.brokerWebServiceURL
  ## The Web service URL pointing to the broker cluster
  ##
  brokerWebServiceURL:
  ## @skip config.brokerWebServiceURLTLS
  ## The TLS Web service URL pointing to the broker cluster
  ##
  brokerWebServiceURLTLS:
  ## @skip config.clusterName
  ## Name of the cluster to which this broker belongs to
  ##
  clusterName:
  ## @skip config.configurationMetadataStoreUrl
  ## Configuration store connection string (as a comma-separated list)
  ##
  configurationMetadataStoreUrl:
  ## @param config.forwardAuthorizationCredentials Forward client authorization credentials to Broker for re-authorization, and make sure authentication is enabled for this to take effect.
  ##
  forwardAuthorizationCredentials:
  ## @skip config.functionWorkerWebServiceURL
  ## The Web service URL pointing to the function worker cluster. It is only configured when you setup function workers in a separate cluster.
  ##
  functionWorkerWebServiceURL:
  ## @skip config.functionWorkerWebServiceURLTLS
  ## The TLS Web service URL pointing to the function worker cluster. It is only configured when you setup function workers in a separate cluster.
  ##
  functionWorkerWebServiceURLTLS:
  ## @param config.haProxyProtocolEnabled Enable or disable the HAProxy protocol.
  ##
  haProxyProtocolEnabled:
  ## @param config.httpNumThreads Number of threads to use for HTTP requests processing
  ##
  httpNumThreads:
  ## @param config.httpOutputBufferSize HTTP output buffer size. The amount of data that will be buffered for HTTP requests before it is flushed to the channel. A larger buffer size may result in higher HTTP throughput though it may take longer for the client to see data. If using HTTP streaming via the reverse proxy, this should be set to the minimum value (1) so that clients see the data as soon as possible.
  ##
  httpOutputBufferSize: 32768
  ## @param config.httpReverseProxyConfigs HTTP directs to redirect to non-pulsar services
  ##
  httpReverseProxyConfigs:
  ## @param config.kafkaAdvertisedListeners Listeners to publish to ZooKeeper for clients to use. The format is the same as kafkaListeners.
  ##
  kafkaAdvertisedListeners:
  ## @param config.kafkaListeners Comma-separated list of URIs that we will listen on and the listener names. For example: PLAINTEXT://localhost:9092,SSL://localhost:9093. Each URI’s scheme represents a listener name if kafkaProtocolMap is configured. Otherwise, the scheme must be a valid protocol in PLAINTEXT, SSL, SASL_PLAINTEXT, or SASL_SSL. If the hostname is not set, it will be bound to the default interface.
  ##
  kafkaListeners:
  ## @param config.kafkaProtocolMap Comma-separated map of listener name and protocol. For example: PRIVATE:PLAINTEXT,PRIVATE_SSL:SSL,PUBLIC:PLAINTEXT,PUBLIC_SSL:SSL.
  ##
  kafkaProtocolMap:
  ## @param config.kafkaProxySuperUserRole
  ##
  kafkaProxySuperUserRole:
  ## @param config.kafkaTransactionCoordinatorEnabled
  ##
  kafkaTransactionCoordinatorEnabled:
  ## @param config.kopSchemaRegistryEnable
  ##
  kopSchemaRegistryEnable:
  ## @param config.kopSchemaRegistryProxyEnableTls
  ##
  kopSchemaRegistryProxyEnableTls:
  ## @param config.kopSchemaRegistryProxyPort
  ##
  kopSchemaRegistryProxyPort:
  ## @param config.maxConcurrentInboundConnections Max concurrent inbound connections. The proxy will reject requests beyond that.
  ##
  maxConcurrentInboundConnections: 10000
  ## @param config.maxConcurrentLookupRequests Max concurrent outbound connections. The proxy will error out requests beyond that.
  ##
  maxConcurrentLookupRequests: 50000
  ## @param config.metadataStoreCacheExpirySeconds Metadata store cache expiry time in seconds
  ##
  metadataStoreCacheExpirySeconds: 300
  ## @param config.metadataStoreSessionTimeoutMillis Metadata store session timeout (in milliseconds)
  ##
  metadataStoreSessionTimeoutMillis: 30000
  ## @skip config.metadataStoreUrl
  ## Metadata store quorum connection string (as a comma-separated list)
  ##
  metadataStoreUrl:
  ## @param config.numAcceptorThreads Number of threads used for Netty Acceptor. Note: This configuration is only available for 2.10.1 and later versions.
  ##
  numAcceptorThreads: 1
  ## @param config.numIOThreads Number of threads used for Netty IO. Note: This configuration is only available for 2.10.1 and later versions.
  ##
  numIOThreads:
  ## @skip config.proxyExtensions
  ## List of proxy extensions to load, which is a list of extension names
  ##
  proxyExtensions:
  ## @skip config.proxyExtensionsDirectory
  ## The directory to locate extensions
  ##
  proxyExtensionsDirectory:
  ## @param config.proxyLogLevel Proxy log level0: Do not log any TCP channel information. 1: Parse and log any TCP channel information and command information without message body. 2: Parse and log channel information, command information and message body.
  ##
  proxyLogLevel: 0
  ## @param config.saslAllowedMechanisms
  ##
  saslAllowedMechanisms:
  ## @param config.saslJaasClientAllowedIds This is a regexp, which limits the range of possible ids which can connect to the Broker using SASL. Default value: `SaslConstants.JAAS_CLIENT_ALLOWED_IDS_DEFAULT`, which is ".*pulsar.*", so only clients whose id contains 'pulsar' are allowed to connect.
  ##
  saslJaasClientAllowedIds:
  ## @param config.saslJaasServerRoleTokenSignerSecretPath Path to file containing the secret to be used to SaslRoleTokenSigner. The Path can be specified like: saslJaasServerRoleTokenSignerSecretPath=file:///my/saslRoleTokenSignerSecret.key
  ##
  saslJaasServerRoleTokenSignerSecretPath:
  ## @param config.saslJaasServerSectionName Service Principal, for login context name. Default value `SaslConstants.JAAS_DEFAULT_PROXY_SECTION_NAME`, which is "PulsarProxy".
  ##
  saslJaasServerSectionName:
  ## @skip config.servicePort
  ## The port to use for server binary Protobuf requests
  ##
  servicePort:
  ## @skip config.servicePortTls
  ## The port to use to server binary Protobuf TLS requests
  ##
  servicePortTls:
  ## @param config.statusFilePath Path for the file used to determine the rotation status for the proxy instance when responding to service discovery health checks
  ##
  statusFilePath:
  ## @skip config.superUserRoles
  ## Role names that are treated as “super-users,” meaning that they will be able to perform all admin
  ##
  superUserRoles:
  ## @skip config.tlsCertificateFilePath
  ## Path for the TLS certificate file
  ##
  tlsCertificateFilePath:
  ## @param config.tlsCertRefreshCheckDurationSec TLS certificate refresh duration in seconds. If the value is set 0, check TLS certificate every new connection.
  ##
  tlsCertRefreshCheckDurationSec: 300
  ## @param config.tlsCiphers Specify the tls cipher the broker will use to negotiate during TLS Handshake. Multiple values can be specified, separated by commas. Example:- TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
  ##
  tlsCiphers:
  ## @skip config.tlsEnabledWithBroker
  ## Whether TLS is enabled when communicating with Pulsar brokers.
  ##
  tlsEnabledWithBroker: false
  ## @skip config.tlsEnabledWithKeyStore
  ## Enable TLS with KeyStore type configuration for proxy.
  ##
  tlsEnabledWithKeyStore:
  ## @skip config.tlsHostnameVerificationEnabled
  ## Whether the hostname is validated when the proxy creates a TLS connection with brokers
  ##
  tlsHostnameVerificationEnabled:
  ## @skip config.tlsKeyFilePath
  ## Path for the TLS private key file
  ##
  tlsKeyFilePath:
  ## @skip config.tlsKeyStore
  ## TLS KeyStore path for proxy.
  ##
  tlsKeyStore:
  ## @skip config.tlsKeyStorePassword
  ## TLS KeyStore password for proxy.
  ##
  tlsKeyStorePassword:
  ## @skip config.tlsKeyStoreType
  ## TLS KeyStore type configuration for proxy. For example: JKS, PKCS12
  ##
  tlsKeyStoreType:
  ## @param config.tlsProtocols Specify the tls protocols the broker will use to negotiate during TLS Handshake. Multiple values can be specified, separated by commas. Example:- TLSv1.3, TLSv1.2
  ##
  tlsProtocols:
  ## @skip config.tlsProvider
  ## TLS provider.
  ##
  tlsProvider:
  ## @param config.tlsRequireTrustedClientCertOnConnect Whether client certificates are required for TLS. Connections are rejected if the client certificate isn’t trusted.
  ##
  tlsRequireTrustedClientCertOnConnect:
  ## @skip config.tlsTrustCertsFilePath
  ## Path for the trusted TLS certificate pem file
  ##
  tlsTrustCertsFilePath:
  ## @skip config.tlsTrustStore
  ## TLS TrustStore path for proxy
  ##
  tlsTrustStore:
  ## @skip config.tlsTrustStorePassword
  ## TLS TrustStore password for proxy
  ##
  tlsTrustStorePassword:
  ## @skip config.tlsTrustStoreType
  ## TLS TrustStore type configuration for proxy. For example: JKS, PKCS12
  ##
  tlsTrustStoreType:
  ## @param config.tokenAudience The token audience stands for this broker. The field tokenAudienceClaim of a valid token need contains this parameter.
  ##
  tokenAudience:
  ## @param config.tokenAudienceClaim The token audience "claim" name, e.g. "aud". It is used to get the audience from token. If it is not set, the audience is not verified.
  ##
  tokenAudienceClaim:
  ## @param config.tokenAuthClaim Specify the token claim that will be used as the authentication "principal" or "role". The "subject" field will be used if this is left blank
  ##
  tokenAuthClaim:
  ## @param config.tokenPublicKey Configure the public key to be used to validate auth tokens. The key can be specified like: tokenPublicKey=data:;base64,xxxxxxxxx or tokenPublicKey=file:///my/secret.key. Note: key file must be DER-encoded.
  ##
  tokenPublicKey:
  ## @param config.tokenSecretKey Configure the secret key to be used to validate auth tokens. The key can be specified like: tokenSecretKey=data:;base64,xxxxxxxxx or tokenSecretKey=file:///my/secret.key. Note: key file must be DER-encoded.
  ##
  tokenSecretKey:
  ## @param config.tokenSettingPrefix Configure the prefix of the token related setting like tokenSecretKey, tokenPublicKey, tokenAuthClaim, tokenPublicAlg, tokenAudienceClaim, and tokenAudience.
  ##
  tokenSettingPrefix:
  ## @skip config.webServicePort
  ## The port to use for server web request
  ##
  webServicePort:
  ## @skip config.webServicePortTls
  ## The port to use for server TLS requests
  ##
  webServicePortTls:
  ## @param config.webSocketServiceEnabled Enable or disable the WebSocket servlet
  ##
  webSocketServiceEnabled:
  ## @param config.extraConfigValues Additional config values
  ##
  extraConfigValues: {}

## @section Service parameters
## @descriptionStart
## Component application controller service and service account parameters. Note the data-store's service is headless because it only needs to communicate with other cluster components.
## @descriptionEnd
##
service:

  ## @param service.type Broker service type
  ##
  type: LoadBalancer

  ports:
    ## @param service.ports.pulsar Broker application controller binary service port
    ##
    pulsar: 6650
    ## @param service.ports.pulsarSsl Broker application controller secure binary service port
    ##
    pulsarSsl: 6651
    ## @param service.ports.http Broker application controller web service port
    ##
    http: 8080
    ## @param service.ports.https Broker application controller secure web service port
    ##
    https: 8081

  ## Node ports to expose
  ## @param service.nodePorts.pulsar Node port for binary connections
  ## @param service.nodePorts.pulsarSsl Node port for secure binary connections
  ## @param service.nodePorts.http Node port for web connections
  ## @param service.nodePorts.https Node port for secure web connections
  ## NOTE: choose port between <30000-32767>
  ##
  nodePorts:
    pulsar: 30650
    pulsarSsl: 30651
    http: 30080
    https: 30081

  ## @param service.clusterIP Broker application controller service Cluster IP
  ## e.g.:
  ## clusterIP: None
  ##
  clusterIP: ""

  ## @param service.loadBalancerIP Broker application controller service Load Balancer IP
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
  ##
  loadBalancerIP: ""

  ## @param service.loadBalancerSourceRanges Broker application controller service Load Balancer sources
  ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
  ## e.g:
  ## loadBalancerSourceRanges:
  ##   - 10.10.10.0/24
  ##
  loadBalancerSourceRanges: []

  ## @param service.externalTrafficPolicy Broker application controller service external traffic policy
  ## ref https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
  ##
  externalTrafficPolicy: Cluster

  ## @param service.annotations Additional custom annotations for Broker application controller service
  ##
  annotations: {}

  ## @param service.extraPorts Extra ports to expose (normally used with the `sidecar` value)
  ##
  extraPorts: []

  ## @param service.sessionAffinity Session Affinity for Kubernetes service, can be "None" or "ClientIP"
  ## If "ClientIP", consecutive client requests will be directed to the same Pod
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
  ##
  sessionAffinity: None

  ## @param service.sessionAffinityConfig Additional settings for the sessionAffinity
  ## sessionAffinityConfig:
  ##   clientIP:
  ##     timeoutSeconds: 300
  sessionAffinityConfig: {}

## ServiceAccount configuration for the Component
##
serviceAccount:

  ## @param serviceAccount.name The name of the ServiceAccount to use.
  ## If not set and create is true, a name is generated using the common.names.name template
  name: ""

  ## @param serviceAccount.create Specifies whether a ServiceAccount should be created
  ##
  create: true

  ## @param serviceAccount.automountServiceAccountToken Automount service account token for the server service account
  ##
  automountServiceAccountToken: true

  ## @param serviceAccount.annotations [object,nullable] Annotations for service account. Evaluated as a template. Only used if `create` is `true`.
  ##
  annotations: {}

## @param podDisruptionBudget.enabled Enable the disruption budget
## @param podDisruptionBudget.maxUnavailable When enabled the maximum allowed unavailable for matchLabel objects
## @param podDisruptionBudget.minAvailable When enabled the min allowed available for matchLabel objects
##
podDisruptionBudget:
  enabled: true
  maxUnavailable: 1
  minAvailable:

## @section Other Parameters

## @param metricsServiceMonitor Enable component metrics scraping by creating a service monitor that is discoverable by Prometheus.
##
metricsServiceMonitor: false

## @param updateStrategy.type Bookkeeper statefulset strategy type
## @param updateStrategy.rollingUpdate Bookkeeper statefulset rolling update configuration parameters
## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
##
updateStrategy:
  type: RollingUpdate
  rollingUpdate: {}

## @param podLabels Extra labels for Bookkeeper pods
## Ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
##
podLabels: {}

## @param podAnnotations Extra annotations for Bookkeeper pods
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
##
podAnnotations: {}

## @param hostAliases Bookkeeper pods host aliases
## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
##
hostAliases: []

## @param hostNetwork Specify if host network should be enabled for Bookkeeper pods
##
hostNetwork: false

## @param hostIPC Specify if host IPC should be enabled for Bookkeeper pods
##
hostIPC: false

## @param schedulerName Name of the k8s scheduler (other than default)
## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
##
schedulerName: ""

## @param affinity Affinity for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
## Note: podAffinityPreset, podAntiAffinityPreset, and  nodeAffinityPreset will be ignored when it's set
##
affinity: {}

## @param podAffinityPreset Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
##
podAffinityPreset: ""

## @param podAntiAffinityPreset Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
##
podAntiAffinityPreset: hard

## Node affinity preset
## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
##
nodeAffinityPreset:
  ## @param nodeAffinityPreset.type Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
  ##
  type: ""
  ## @param nodeAffinityPreset.key Node label key to match Ignored if `affinity` is set.
  ## E.g.
  ## key: "kubernetes.io/e2e-az-name"
  ##
  key: ""
  ## @param nodeAffinityPreset.values Node label values to match. Ignored if `affinity` is set.
  ## E.g.
  ## values:
  ##   - e2e-az1
  ##   - e2e-az2
  ##
  values: []

## @param nodeSelector Node labels for pod assignment
## Ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}

## @param tolerations Tolerations for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []

## @param topologySpreadConstraints Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template
## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
##
topologySpreadConstraints: []

## @param terminationGracePeriodSeconds Seconds the pod needs to gracefully terminate
## ref: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#hook-handler-execution
##
terminationGracePeriodSeconds: 60

## @param priorityClassName Name of the existing priority class to be used by Bookkeeper pods
## Ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
##
priorityClassName: ""

## Bookkeeper pods' Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
## @param podSecurityContext.enabled Enable security context for the pods
## @param podSecurityContext.fsGroup Set Bookkeeper pod's Security Context fsGroup
##
podSecurityContext:
  enabled: true
  fsGroup: 1001

## Bookkeeper containers' Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
## @param containerSecurityContext.enabled Enable Bookkeeper containers' Security Context
## @param containerSecurityContext.runAsUser Set Bookkeeper containers' Security Context runAsUser
## @param containerSecurityContext.runAsNonRoot Set Bookkeeper containers' Security Context runAsNonRoot
## e.g:
##   containerSecurityContext:
##     enabled: true
##     capabilities:
##       drop: ["NET_RAW"]
##     readOnlyRootFilesystem: true
##
containerSecurityContext:
  enabled: true
  runAsUser: 1001
  runAsNonRoot: true

## @param containerCommand Override the container image ENTRYPOINT. Leave blank to use image default (if set)
##
containerCommand: ["sh", "-c", "/pulsar/bin/pulsar proxy"]

## @param containerArgs Override the container image CMD. Leave blank to use image default (if set)
##
containerArgs: []

## @param extraEnvVars Extra environment variables to add to the provisioning pod
## e.g:
## extraEnvVars:
##   - name: SOME_VALUE
##     value: "10"
##
extraEnvVars: []

## @param extraEnvVarsCM ConfigMap with extra environment variables
##
extraEnvVarsCM: ""

## @param extraEnvVarsSecret Secret with extra environment variables
##
extraEnvVarsSecret: ""

## @param initContainers Add additional Add init containers to the Bookkeeper pod(s)
## e.g:
## initContainers:
##   - name: your-image-name
##     image: your-image
##     imagePullPolicy: Always
##     ports:
##       - name: portname
##         containerPort: 1234
##
initContainers: []

containerPorts:

  ## @param containerPorts.pulsar Broker binary port
  ##
  pulsar: 6650

  ## @param containerPorts.pulsarSsl Broker secure binary port
  ##
  pulsarSsl: 6651

  ## @param containerPorts.http Broker web port
  ##
  http: 8080

  ## @param containerPorts.https Broker secure web
  ##
  https: 8081

## @section Pod Liveness & Readyness

## Configure extra options for proxy containers' liveness, readiness and startup probes
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
## @param livenessProbe.enabled Enable livenessProbe on proxy containers
## @param livenessProbe.exec.command Process to monitor for readiness
## @param livenessProbe.periodSeconds Period seconds for readinessProbe
## @param livenessProbe.timeoutSeconds Timeout seconds for readinessProbe
## @param livenessProbe.failureThreshold Failure threshold for readinessProbe
## @param livenessProbe.successThreshold Success threshold for readinessProbe
##
livenessProbe:
  enabled: false
  exec:
    command:
      - "/pulsar/probes/liveness.sh"
  periodSeconds: 3
  timeoutSeconds: 30
  failureThreshold: 5
  successThreshold: 1

## @param readinessProbe.enabled Enable readinessProbe on proxy containers
## @param readinessProbe.exec.command Process to monitor for readiness
## @param readinessProbe.periodSeconds Period seconds for readinessProbe
## @param readinessProbe.failureThreshold Failure threshold for readinessProbe
## @param readinessProbe.successThreshold Success threshold for readinessProbe
##
readinessProbe:
  enabled: false
  exec:
    command:
      - "/pulsar/probes/readiness.sh"
  periodSeconds: 5
  failureThreshold: 1
  successThreshold: 1

## @param startupProbe.enabled Enable startupProbe on proxy containers
## @param startupProbe.exec.command Process to monitor for readiness
## @param startupProbe.periodSeconds Period seconds for readinessProbe
## @param startupProbe.failureThreshold Failure threshold for readinessProbe
##
startupProbe:
  enabled: false
  exec:
    command:
      - "/pulsar/probes/startup.sh"
  periodSeconds: 3
  failureThreshold: 10

## @param lifecycleHooks lifecycleHooks for the Bookkeeper container to automate configuration before or after startup
##
lifecycleHooks: {}

## Bookkeeper resource requests and limits
## ref: https://kubernetes.io/docs/user-guide/compute-resources/
## @param resources.limits The resources limits for the container
##
resources:
  limits: {}

  requests:
    ## @param resources.requests.memory The requested resource memory for the container
    ##
    memory: 2Gi

    ## @param resources.requests.cpu The requested resource cpu for the container
    ##
    cpu: 1

## @param extraVolumes Optionally specify extra list of additional volumes for the Bookkeeper pod(s)
## e.g:
## extraVolumes:
##   - name: certs
##     secret:
##       secretName: admin-console-tls
##
##   - name: token-superuser
##     secret:
##       secretName: token-superuser
##
extraVolumes: []

## @param extraVolumeMounts Optionally specify extra list of additional volumeMounts for the Bookkeeper container(s)
## extraVolumeMounts:
##    - name: certs
##      readOnly: true
##      mountPath: /pulsar/certs

##    - mountPath: "/pulsar/token-superuser"
##      name: token-superuser
##      readOnly: true
##
extraVolumeMounts: []

## @param sidecars Add additional sidecar containers to the Bookkeeper pod(s)
## e.g:
## sidecars:
##   - name: your-image-name
##     image: your-image
##     imagePullPolicy: Always
##     ports:
##       - name: portname
##         containerPort: 1234
##
sidecars: []
