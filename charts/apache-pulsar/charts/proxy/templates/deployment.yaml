{{- $component := "proxy" -}}
{{- $name := (printf "%s-deployment" (include "proxy.name" $)) -}}
{{- $extraVolMounts := default list .Values.extraVolumeMounts -}}
{{- $extraVols := default list .Values.extraVolumes -}}
{{- $containerPorts := .Values.containerPorts -}}
{{- $jksPassSecretName := "" }}

{{- if eq (include "common.tls.require-secure-edge" .) "true" -}}
  {{- $_ := unset $containerPorts "http" -}}
  {{- $_ := unset $containerPorts "pulsar" -}}

  {{- $tlsSecretName := coalesce .Values.certificateResources.tlsSecretName .Values.global.interComponentTls.tlsSecretName (printf "%s-tls" (include "proxy.name" .)) -}}
  {{- $jksPassSecretName = coalesce .Values.certificateResources.jksPasswordSecretName .Values.global.interComponentTls.jksPasswordSecretName (printf "%s-jks" (include "proxy.name" .)) -}}

  {{- $extraVolMounts = append $extraVolMounts (include "common.tls.volumeMounts.certs" . | fromJson) -}}
  {{- $extraVolMounts = append $extraVolMounts (include "common.tls.volumeMounts.jks" . | fromJson) -}}

  {{- $extraVols = append $extraVols (include "common.tls.volumes.certs" (dict "tlsSecretName" $tlsSecretName "context" $) | fromJson) -}}
  {{- $extraVols = append $extraVols (include "common.tls.volumes.jks-store" (dict "jksPasswordSecretName" $jksPassSecretName "tlsSecretName" $tlsSecretName "context" $) | fromJson) -}}
{{- else -}}
  {{- $_ := unset $containerPorts "https" -}}
  {{- $_ := unset $containerPorts "pulsarSsl" -}}
{{- end -}}

apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ $name | quote }}
  namespace: {{ (include "common.names.namespace" .) | quote }}
  labels: {{ include "common.labels.standard" (dict "name" (include "proxy.name" $) "context" $ ) | nindent 4 }}
    app.kubernetes.io/component: {{ $component | quote }}
    {{ include "common.tplvalues.render" ( dict "value" .Values.global.commonLabels "context" $ ) | nindent 4 }}
  annotations:
    {{ include "common.tplvalues.render" ( dict "value" .Values.global.commonAnnotations "context" $ ) | nindent 4 }}
spec:
  replicas: {{ int .Values.replicas }}
  selector:
    matchLabels: {{ (include "common.labels.matchLabels" (dict "name" (include "proxy.name" $) "context" $ )) | nindent 6 }}
      app.kubernetes.io/component: {{ $component | quote }}
  strategy: {{ include "common.tplvalues.render" (dict "value" .Values.updateStrategy "context" $ ) | nindent 4 }}
  template:
    metadata:
      labels: {{ include "common.labels.standard" (dict "name" (include "proxy.name" .) "context" $ ) | nindent 8 }}
        app.kubernetes.io/component: {{ $component | quote }}
        {{- if .Values.podLabels }}
        {{ include "common.tplvalues.render" (dict "value" .Values.podLabels "context" $) | nindent 8 }}
        {{- end }}
      annotations:
        checksum/configuration: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- if .Values.podAnnotations }}
        {{ include "common.tplvalues.render" (dict "value" .Values.podAnnotations "context" $) | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.hostAliases }}
      hostAliases: {{ include "common.tplvalues.render" (dict "value" .Values.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      hostNetwork: {{ .Values.hostNetwork }}
      hostIPC: {{ .Values.hostIPC }}
      {{- if .Values.schedulerName }}
      schedulerName: {{ .Values.schedulerName | quote }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity: {{ include "common.tplvalues.render" (dict "value" .Values.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{ include "common.affinities.pods" (dict "type" .Values.podAffinityPreset "component" $component "name" $name "extraMatchLabels" (dict) "context" $) | nindent 10}}
        podAntiAffinity: {{ include "common.affinities.pods" (dict "type" .Values.podAntiAffinityPreset "component" $component "name" $name "extraMatchLabels" (dict) "context" $) | nindent 10 }}
        nodeAffinity: {{ include "common.affinities.nodes" (dict "type" .Values.nodeAffinityPreset.type "key" .Values.nodeAffinityPreset.key "values" .Values.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector: {{ include "common.tplvalues.render" (dict "value" .Values.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations: {{ include "common.tplvalues.render" (dict "value" .Values.tolerations "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.topologySpreadConstraints }}
      topologySpreadConstraints: {{ include "common.tplvalues.render" (dict "value" .Values.topologySpreadConstraints "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      {{- if .Values.podSecurityContext.enabled }}
      securityContext: {{ omit .Values.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "proxy.serviceAccountName" . }}
      initContainers:
      {{- if .Release.IsInstall -}}
        {{ include "common.lifeCycle.broker-running" . | nindent 8 }}
      {{- end -}}
      {{- if .Values.initContainers }}
        {{ include "common.tplvalues.render" ( dict "value" .Values.initContainers "context" $ ) | nindent 8 }}
      {{- end }}
      containers:
        - name: "proxy"
          image: {{ include "common.images.image" (dict "imageRoot" .Values.image "global" .Values.global) }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          {{ include "common.images.renderPullSecrets" ( dict "images" (list .Values.image) "context" $) }}
          {{- if .Values.containerSecurityContext.enabled }}
          securityContext: {{ omit .Values.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.containerCommand }}
          command:
            {{ include "common.tplvalues.render" (dict "value" .Values.containerCommand "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.containerArgs }}
          args:
            {{ include "common.tplvalues.render" (dict "value" .Values.containerArgs "context" $) | nindent 12 }}
          {{- end }}
          env:
            {{- if .Values.extraEnvVars }}
            {{ include "common.tplvalues.render" ( dict "value" .Values.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          {{- if or .Values.extraEnvVarsCM .Values.extraEnvVarsSecret }}
          envFrom:
            {{- if .Values.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.extraEnvVarsCM "context" $) }}
            {{- end }}
            {{- if .Values.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.extraEnvVarsSecret "context" $) }}
            {{- end }}
          {{- end }}
          ports:
            {{- if $containerPorts.http }}
            - name: "http"
              containerPort: {{ int $containerPorts.http }}
            {{- end }}
            {{- if $containerPorts.https }}
            - name: "https"
              containerPort: {{ int $containerPorts.https }}
            {{- end }}
            {{- if $containerPorts.pulsar }}
            - name: "pulsar"
              containerPort: {{ int $containerPorts.pulsar }}
            {{- end }}
            {{- if $containerPorts.pulsarSsl }}
            - name: "pulsar-ssl"
              containerPort: {{ int $containerPorts.pulsarSsl }}
            {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe: {{ include "common.tplvalues.render" (dict "value" (omit .Values.livenessProbe "enabled") "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe: {{ include "common.tplvalues.render" (dict "value" (omit .Values.readinessProbe "enabled") "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.startupProbe.enabled }}
          startupProbe: {{ include "common.tplvalues.render" (dict "value" (omit .Values.startupProbe "enabled") "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.lifecycleHooks }}
          lifecycle: {{ include "common.tplvalues.render" (dict "value" .Values.lifecycleHooks "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.lifecycleHooks }}
          lifecycle: {{ include "common.tplvalues.render" (dict "value" .Values.lifecycleHooks "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.resources }}
          resources: {{ toYaml .Values.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: "logs"
              mountPath: {{ .Values.logPersistence.mountPath }}
            - name: "conf"
              mountPath: {{ .Values.pulsarEnv.confPath }}
            - name: "probes"
              mountPath: /pulsar/probes
            {{- if $extraVolMounts }}
            {{ include "common.tplvalues.render" (dict "value" $extraVolMounts "context" $) | nindent 12 }}
            {{- end }}
        {{- if .Values.sidecars }}
        {{ include "common.tplvalues.render" (dict "value" .Values.sidecars "context" $) | nindent 8 }}
        {{- end }}
      volumes:
        - name: "logs"
          emptyDir: {}
        - name: "conf"
          configMap:
            name: {{ printf "%s-configuration" (include "proxy.name" .) }}
        - name: "probes"
          configMap:
            name: {{ printf "%s-probes" (include "proxy.name" .) }}
            defaultMode: 0755
        {{- if $extraVols }}
        {{ include "common.tplvalues.render" (dict "value" $extraVols "context" $) | nindent 8 }}
        {{- end }}